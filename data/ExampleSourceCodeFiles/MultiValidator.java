/Users/user/eclipse.platform.ui/bundles/org.eclipse.core.databinding/src/org/eclipse/core/databinding/validation/MultiValidator.java
copyright matthew hall all rights reserved this program accompanying materials terms eclipse public license accompanies distribution http eclipse org legal epl html contributors matthew hall initial implementation bug boris bokowski bug matthew hall bug ovidio mallo bug stefan r™¿?ck bug org eclipse core databinding validation java util array list java util arrays java util iterator java util list org eclipse core databinding validation status provider org eclipse core databinding observable change event org eclipse core databinding observable diffs org eclipse core databinding observable change listener org eclipse core databinding observable observable org eclipse core databinding observable stale listener org eclipse core databinding observable observable tracker org eclipse core databinding observable observables org eclipse core databinding observable realm org eclipse core databinding observable stale event org eclipse core databinding observable list list change listener org eclipse core databinding observable list observable list org eclipse core databinding observable list list change event org eclipse core databinding observable list list diff visitor org eclipse core databinding observable list writable list org eclipse core databinding observable map observable map org eclipse core databinding observable set observable set org eclipse core databinding observable abstract observable value org eclipse core databinding observable observable value org eclipse core internal databinding util org eclipse core internal databinding validation validated observable list org eclipse core internal databinding validation validated observable map org eclipse core internal databinding validation validated observable set org eclipse core internal databinding validation validated observable value org eclipse core runtime assert org eclipse core runtime status validator cross constraints observables some practical examples cross constraints start list percentages add example require integer fields odd numbers pre data binding context dbc data binding context observable value target observables observe text text modify observable value target observables observe text text modify binding stages target middle middle model simplifies validation logic using middle observables saves trouble converting target values strings model type integers manually validation observable value middle writable value null integer observable value middle writable value null integer dbc bind target middle null null dbc bind target middle null null create multi validator multi validator validator multi validator status validate calculate validation status integer integer middle value integer integer middle value math abs value math abs value validation status error quot values odd quot validation status dbc add validation status provider validator bind middle observables model observables observable value model writable value integer integer observable value model writable value integer integer dbc bind middle model null null dbc bind middle model null null pre multi validator prevent invalid data copied model this wrapping target observable validated observable binding validated observable model pre validated observables change validator passes observable value validated validator observe validated value middle observable value validated validator observe validated value middle observable value model writable value integer integer observable value model writable value integer integer bind validated middle target dbc bind validated model null null dbc bind validated model null null pre note guarantee order updates multiple validated observables change multiple updates pending status valid therefore model invalid pending update multi validator validation status provider realm realm validation status observable value validation status observable value unmodifiable validation status writable list targets observable list unmodifiable targets observable list models list change listener targets listener list change listener override handle list change list change event event event diff accept list diff visitor override handle add object element observable dependency observable element dependency add change listener dependency listener dependency add stale listener dependency listener override handle remove object element observable dependency observable element dependency remove change listener dependency listener dependency remove stale listener dependency listener dependency listener change listener stale listener override handle change change event event revalidate override handle stale stale event stale event validation status stale dependency listener dependency listener dependency listener constructs multi validator realm multi validator realm default constructs multi validator realm param realm realm validation takes place multi validator realm realm assert not null realm realm null realm realm observable tracker set ignore true validation status validation status observable value realm targets writable list realm array list observable targets add list change listener targets listener unmodifiable targets observables unmodifiable observable list targets models observables empty observable list realm observable tracker set ignore false check observable observable target assert not null target target observable null assert true realm equals target realm target observable realm multi validator returns link observable value current validation status multi validator returned observable realm multi validator link observable value current validation status multi validator override observable value validation status unmodifiable validation status null observable tracker set ignore true unmodifiable validation status observables unmodifiable observable value validation status observable tracker set ignore false revalidate unmodifiable validation status signals evaluation current validation status clients invoke method validation status updated change automatically tracked multi validator captured link observable instance note there guarantee multi validator evaluate validation status calling link validate dirty instead decide perform evaluation lazily validate revalidate validation runnable runnable status validation result override validation result validate validation result null validation result validation status runtime exception usually dependencies init validation result validation status error message validation runnable validation runnable validation runnable observable dependencies observable tracker and monitor validation runnable null null observable tracker set ignore true list targets array list arrays list dependencies internal observables dependencies prevent dependency loop iterator new targets iterator new next object dependency new dependency validation status dependency unmodifiable validation status dependency targets dependency unmodifiable targets dependency models new remove this loop roughly equivalent targets retain all targets targets remove all targets except dependencies compared identity equality outer targets size object dependency targets iterator new targets iterator new next object dependency new dependency dependency dependency remove list dependencies new remove outer old dependency longer dependency remove targets targets remove targets add all targets observable tracker set ignore false once dependencies set status validation status set value validation runnable validation result returns current validation status note ensure validation status current automatically dependencies calculate status accessed link observable instances each dependency observable realm multi validator other dependencies captured observables accounted clients explicitly call link revalidate validation status evaluated arbitrary change application current validation status revalidate status validate returns wrapper link observable value stays sync target observable validation status valid statuses link status link status link status severity considered valid wrapper behaves respect validation status while valid wrapper stays sync target observable while invalid wrapper target observable valid target stale event fired signaling change pending when status invalid valid wrapper takes target observable synchronization resumes param target target observable wrapped must realm multi validator observable value stays sync target observable validation status valid observable value observe validated value observable value target check observable target validated observable value target validation status returns wrapper link observable list stays sync target observable validation status valid statuses link status link status link status severity considered valid wrapper behaves respect validation status while valid wrapper stays sync target observable while invalid wrapper elements target observable valid elements target elements stale event fired signaling change pending when status invalid valid wrapper takes elements target observable synchronization resumes param target target observable wrapped must realm multi validator observable value stays sync target observable validation status valid observable list observe validated list observable list target check observable target validated observable list target validation status returns wrapper link observable set stays sync target observable validation status valid statuses link status link status link status severity considered valid wrapper behaves respect validation status while valid wrapper stays sync target observable while invalid wrapper elements target observable valid elements target elements stale event fired signaling change pending when status invalid valid wrapper takes elements target observable synchronization resumes param target target observable wrapped must realm multi validator observable value stays sync target observable validation status valid observable set observe validated set observable set target check observable target validated observable set target validation status returns wrapper link observable map stays sync target observable validation status valid statuses link status link status link status severity considered valid wrapper behaves respect validation status while valid wrapper stays sync target observable while invalid wrapper entries target observable valid entries target entries stale event fired signaling change pending when status invalid valid wrapper takes entries target observable synchronization resumes param target target observable wrapped must realm multi validator observable value stays sync target observable validation status valid observable map observe validated map observable map target check observable target validated observable map target validation status override observable list targets unmodifiable targets override observable list models models override dispose targets null targets clear remove listeners dependencies unmodifiable validation status null unmodifiable validation status dispose unmodifiable validation status null validation status null validation status dispose validation status null unmodifiable targets null unmodifiable targets dispose unmodifiable targets null targets null targets dispose targets null models null models dispose models null realm null dispose validation status observable value abstract observable value object validation status stale false validation status observable value realm realm realm override object get value override set value object stale stale update staleness checking current dependencies stale stale false iterator iter targets iterator iter next observable dependency observable iter dependency stale stale true object value stale setting fire change event stale stale util equals value fire value change diffs create value diff value stale stale fire stale stale stale stale true fire stale override stale observable tracker getter called stale override object value type status